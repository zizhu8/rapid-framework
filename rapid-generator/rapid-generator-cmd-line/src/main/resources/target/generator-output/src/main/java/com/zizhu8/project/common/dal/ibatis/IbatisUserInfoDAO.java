/*
 * Alipay.com Inc.
 * Copyright (c) 2004 - 2010 All Rights Reserved.
 * Powered By [rapid-generator]
 */
 
package com.zizhu8.project.common.dal.ibatis;

import com.zizhu8.project.common.dal.operation.userinfo.*;
import com.zizhu8.project.common.dal.dataobject.*;


import java.io.*;
import java.net.*;
import java.util.*;

import java.math.BigDecimal;
import java.math.BigInteger;

import cn.org.rapid_framework.util.page.PageQuery;
import cn.org.rapid_framework.ibatis.util.PageQueryUtils;
import cn.org.rapid_framework.util.page.PageList;



import org.springframework.dao.DataAccessException;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import com.zizhu8.project.common.dal.dataobject.UserInfoDO;
import com.zizhu8.project.common.dal.daointerface.UserInfoDAO;

/**
 * UserInfoDAO
 * database table: user_info
 * database table comments: UserInfo
 * This file is generated by <tt>dalgen</tt>, a DAL (Data Access Layer)
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/dalgen</tt>
 * @author badqiu(zhongxuan)
 *
 
 */
public class IbatisUserInfoDAO extends SqlMapClientDaoSupport implements UserInfoDAO {


	/**
	 * 
	 * sql: 
	 * <pre>INSERT      INTO         USER_INFO         (           USER_ID ,USERNAME ,PASSWORD ,BIRTH_DATE ,SEX ,AGE           )      VALUES         (?,?,?,?,?,?)</pre>
	 */
	public long insert(UserInfoDO userInfo) throws DataAccessException {
		if(userInfo == null) {
			throw new IllegalArgumentException("Can't insert a null data object into db.");
		}
		getSqlMapClientTemplate().insert("UserProject.UserInfo.insert", userInfo);
		return userInfo.getUserId();
	}

	/**
	 * 
	 * sql: 
	 * <pre>DELETE      FROM         USER_INFO      WHERE         USER_ID = ?</pre>
	 */
	public int delete(Long userId) throws DataAccessException {
		return getSqlMapClientTemplate().delete("UserProject.UserInfo.delete", userId);
	}

	/**
	 * 
	 * sql: 
	 * <pre>UPDATE         USER_INFO      SET         USERNAME = ? ,PASSWORD = ? ,BIRTH_DATE = ? ,SEX = ? ,AGE = ?                WHERE         USER_ID = ?</pre>
	 */
	public int update(UserInfoDO userInfo) throws DataAccessException {
		if(userInfo == null) {
			throw new IllegalArgumentException("Can't update by a null data object.");
		}
		return getSqlMapClientTemplate().update("UserProject.UserInfo.update", userInfo);
	}

	/**
	 * 
	 * sql: 
	 * <pre>SELECT         USER_ID ,USERNAME ,PASSWORD ,BIRTH_DATE ,SEX ,AGE                FROM         USER_INFO                WHERE         USER_ID = ?</pre>
	 */
	public UserInfoDO queryById(Long userId) throws DataAccessException {
		return (UserInfoDO)getSqlMapClientTemplate().queryForObject("UserProject.UserInfo.queryById",userId);
	}

	/**
	 * 
	 * sql: 
	 * <pre>SELECT         USER_ID ,USERNAME ,PASSWORD ,BIRTH_DATE ,SEX ,AGE                FROM         USER_INFO      where         USERNAME = ?</pre>
	 */
	public UserInfoDO queryByUsername(String username) throws DataAccessException {
		return (UserInfoDO)getSqlMapClientTemplate().queryForObject("UserProject.UserInfo.queryByUsername",username);
	}

	/**
	 * 
	 * sql: 
	 * <pre>SELECT         USER_ID ,USERNAME ,PASSWORD ,BIRTH_DATE ,SEX ,AGE                FROM         USER_INFO      where         AGE = ?</pre>
	 */
	public UserInfoDO queryByAge(Integer age) throws DataAccessException {
		return (UserInfoDO)getSqlMapClientTemplate().queryForObject("UserProject.UserInfo.queryByAge",age);
	}

	/**
	 * 
	 * sql: 
	 * <pre>SELECT         USER_ID ,USERNAME ,PASSWORD ,BIRTH_DATE ,SEX ,AGE          FROM         USER_INFO</pre>
	 */
	public PageList<UserInfoDO> findPage(int pageSize,int pageNum) throws DataAccessException {
		return (PageList<UserInfoDO>)PageQueryUtils.pageQuery(getSqlMapClientTemplate(),"UserProject.UserInfo.findPage",null,pageNum,pageSize);
	}

}

